{"ast":null,"code":"var _jsxFileName = \"/Users/traviswilliams/Desktop/tempconverter/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Head from 'next/head';\n\nconst Index = () => {\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n  const {\n    0: unit,\n    1: setUnit\n  } = useState('');\n  const {\n    0: conversionUnit,\n    1: setConversionUnit\n  } = useState('');\n  const {\n    0: result,\n    1: setResult\n  } = useState(undefined);\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState('');\n\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleUnitChange = e => {\n    setUnit(e.target.value);\n  };\n\n  const handleConversionUnitChange = e => {\n    setConversionUnit(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(input, unit, conversionUnit)\n\n    if (isNaN(input)) {\n      setErrorMessage('Please enter only numbers');\n    } else {\n      if (unit === 'kelvin') {\n        if (conversionUnit === 'farenheit') {\n          var resultKF = (input - 273) * (9 / 5) + 35;\n          setResult(resultKF.toFixed(0));\n        } else if (conversionUnit === 'celsius') {\n          var resultKC = input - 273.15;\n          setResult(resultKC.toFixed(0));\n        }\n      } else if (unit === 'farenheit') {\n        if (conversionUnit === 'celsius') {\n          var resultFC = (input - 32) * 5 / 9;\n          setResult(resultFC.toFixed(0));\n        } else if (conversionUnit === 'kelvin') {\n          var resultFK = (input - 32) * 5 / 9 + 5;\n          setResult(resultFK.toFixed(0));\n        }\n      } else if (unit === 'celsius') {\n        if (conversionUnit === 'farenheit') {\n          var resultCF = input * 9 / 5 + 32;\n          setResult(resultCF.toFixed(0));\n        } else if (conversionUnit === 'kelvin') {\n          var resultCK = input + 273.15;\n          setResult(resultCK.toFixed(0));\n        }\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"container text-center mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://bootswatch.com/4/yeti/bootstrap.min.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"jumbotron\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-5\",\n    style: {\n      objectFit: 'scale-down'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Temperature Converter\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Convert:\"), __jsx(\"input\", {\n    className: \"mb-3\",\n    value: input,\n    onChange: handleInputChange,\n    type: \"text\",\n    placeholder: \"Enter Temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), __jsx(\"select\", {\n    className: \"mb-3\",\n    value: unit,\n    onChange: handleUnitChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"--Select Unit of Measure--\"), __jsx(\"option\", {\n    value: \"farenheit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Farenheit\"), __jsx(\"option\", {\n    value: \"celsius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Celsius\"), __jsx(\"option\", {\n    value: \"kelvin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Kelvin\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"To: \"), __jsx(\"select\", {\n    className: \"mb-3\",\n    value: conversionUnit,\n    onChange: handleConversionUnitChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"--Select a Unit of Measure--\"), __jsx(\"option\", {\n    value: \"farenheit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Farenheit\"), __jsx(\"option\", {\n    value: \"celsius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Celsius\"), __jsx(\"option\", {\n    value: \"kelvin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Kelvin\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    className: \"mb-3\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Convert Temperature\")), !isNaN(result) ? __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 28\n    }\n  }, result + 'Â°') : errorMessage));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/traviswilliams/Desktop/tempconverter/pages/index.js"],"names":["useState","useEffect","Head","Index","input","setInput","unit","setUnit","conversionUnit","setConversionUnit","result","setResult","undefined","errorMessage","setErrorMessage","handleInputChange","e","target","value","handleUnitChange","handleConversionUnitChange","handleSubmit","preventDefault","isNaN","resultKF","toFixed","resultKC","resultFC","resultFK","resultCF","resultCK","objectFit"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Head from 'next/head'\n\nconst Index = () => {\n\n  const [input, setInput] = useState('')\n  const [unit, setUnit] = useState('')\n  const [conversionUnit, setConversionUnit] = useState('')\n  const [result, setResult] = useState(undefined)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value)\n  }\n\n  const handleUnitChange = (e) => {\n    setUnit(e.target.value)\n  }\n\n  const handleConversionUnitChange = (e) => {\n    setConversionUnit(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // console.log(input, unit, conversionUnit)\n    if (isNaN(input)) {\n      setErrorMessage('Please enter only numbers')\n    } else {\n      if (unit === 'kelvin') {\n        if (conversionUnit === 'farenheit') {\n          var resultKF = ((input - 273) * (9 / 5) + 35)\n          setResult(resultKF.toFixed(0))\n        } else if (conversionUnit === 'celsius') {\n          var resultKC = input - 273.15\n          setResult(resultKC.toFixed(0))\n        }\n      } else if (unit === 'farenheit') {\n        if (conversionUnit === 'celsius') {\n          var resultFC = ((input - 32) * 5 / 9)\n          setResult(resultFC.toFixed(0))\n        } else if (conversionUnit === 'kelvin') {\n          var resultFK = ((input - 32) * 5 / 9) + 5\n          setResult(resultFK.toFixed(0))\n        }\n      } else if (unit === 'celsius') {\n        if (conversionUnit === 'farenheit') {\n          var resultCF = ((input * 9 / 5) + 32)\n          setResult(resultCF.toFixed(0))\n        } else if (conversionUnit === 'kelvin') {\n          var resultCK = input + 273.15\n          setResult(resultCK.toFixed(0))\n        }\n      }\n    }\n  }\n\n  return (\n    <div className='container text-center mx-auto'>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://bootswatch.com/4/yeti/bootstrap.min.css\" />\n      </Head>\n      <div className=\"jumbotron\">\n        <form onSubmit={handleSubmit}>\n          <h1 className=\"display-5\" style={{ objectFit: 'scale-down' }}>Temperature Converter</h1>\n          <p>Convert:</p>\n          <input\n            className='mb-3'\n            value={input}\n            onChange={handleInputChange}\n            type=\"text\"\n            placeholder='Enter Temperature'\n          />\n          <br />\n          <select className='mb-3' value={unit} onChange={handleUnitChange}>\n            <option value=\"\">--Select Unit of Measure--</option>\n            <option value=\"farenheit\">Farenheit</option>\n            <option value=\"celsius\">Celsius</option>\n            <option value=\"kelvin\">Kelvin</option>\n          </select>\n          <br />\n          <p>To: </p>\n          <select className='mb-3' value={conversionUnit} onChange={handleConversionUnitChange}>\n            <option value=\"\">--Select a Unit of Measure--</option>\n            <option value=\"farenheit\">Farenheit</option>\n            <option value=\"celsius\">Celsius</option>\n            <option value=\"kelvin\">Kelvin</option>\n          </select>\n          <br />\n          <button className='mb-3' type='submit'>Convert Temperature</button>\n        </form>\n        {\n          !isNaN(result) ? <h3>{result + 'Â°'}</h3> : errorMessage\n        }\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}