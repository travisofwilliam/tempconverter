{"ast":null,"code":"var _jsxFileName = \"/Users/traviswilliams/Desktop/tempconverter/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Head from 'next/head';\n\nconst Index = () => {\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n  const {\n    0: unit,\n    1: setUnit\n  } = useState('');\n  const {\n    0: conversionUnit,\n    1: setConversionUnit\n  } = useState('');\n  const {\n    0: result,\n    1: setResult\n  } = useState(null);\n  useEffect(() => {\n    console.log(result);\n  }, [result]);\n\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleUnitChange = e => {\n    setUnit(e.target.value);\n  };\n\n  const handleConversionUnitChange = e => {\n    setConversionUnit(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(input, unit, conversionUnit);\n\n    if (unit === 'kelvin') {\n      if (conversionUnit === 'farenheit') {\n        var resultKF = (input - 273) * (9 / 5) + 35;\n        setResult(resultKF);\n      } else if (conversionUnit === 'celsius') {\n        var resultKC = input - 273.15;\n        setResult(resultKC);\n      }\n    } else if (unit === 'farenheit') {\n      if (conversionUnit === 'celsius') {\n        var resultFC = (input - 32) * 5 / 9;\n        setResult(resultFC);\n      } else if (conversionUnit === 'kelvin') {\n        var resultFK = (input - 32) * 5 / 9 + 5;\n        setResult(resultFK);\n      }\n    } else if (unit === 'celsius') {\n      if (conversionUnit === 'farenheit') {\n        var resultCF = input * 9 / 5 + 32;\n        setResult(resultCF);\n      } else if (conversionUnit === 'kelvin') {\n        var resultCK = input + 273.15;\n        setResult(resultCK);\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"container text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://bootswatch.com/4/yeti/bootstrap.min.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"card\",\n    style: {\n      width: '18rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"h5\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Temperature Converter\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Convert: \", __jsx(\"input\", {\n    value: input,\n    onChange: handleInputChange,\n    type: \"text\",\n    placeholder: \"Enter Temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 22\n    }\n  }), __jsx(\"select\", {\n    value: unit,\n    onChange: handleUnitChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"--Select Unit of Measure--\"), __jsx(\"option\", {\n    value: \"farenheit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Farenheit\"), __jsx(\"option\", {\n    value: \"celsius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Celsius\"), __jsx(\"option\", {\n    value: \"kelvin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Kelvin\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"To: \"), __jsx(\"select\", {\n    value: conversionUnit,\n    onChange: handleConversionUnitChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"--Select a Unit of Measure--\"), __jsx(\"option\", {\n    value: \"farenheit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Farenheit\"), __jsx(\"option\", {\n    value: \"celsius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \"Celsius\"), __jsx(\"option\", {\n    value: \"kelvin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Kelvin\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Convert Temperature\")), !isNaN(result) ? result.toFixed(0) : '')));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/traviswilliams/Desktop/tempconverter/pages/index.js"],"names":["useState","useEffect","Head","Index","input","setInput","unit","setUnit","conversionUnit","setConversionUnit","result","setResult","console","log","handleInputChange","e","target","value","handleUnitChange","handleConversionUnitChange","handleSubmit","preventDefault","resultKF","resultKC","resultFC","resultFK","resultCF","resultCK","width","isNaN","toFixed"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Head from 'next/head'\n\nconst Index = () => {\n\n  const [input, setInput] = useState('')\n  const [unit, setUnit] = useState('')\n  const [conversionUnit, setConversionUnit] = useState('')\n  const [result, setResult] = useState(null)\n\n  useEffect(() => {\n    console.log(result)\n  }, [result])\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value)\n  }\n\n  const handleUnitChange = (e) => {\n    setUnit(e.target.value)\n  }\n\n  const handleConversionUnitChange = (e) => {\n    setConversionUnit(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(input, unit, conversionUnit)\n    if (unit === 'kelvin') {\n      if (conversionUnit === 'farenheit') {\n        var resultKF = ((input - 273) * (9 / 5) + 35)\n        setResult(resultKF)\n      } else if (conversionUnit === 'celsius') {\n        var resultKC = input - 273.15\n        setResult(resultKC)\n      }\n    } else if (unit === 'farenheit') {\n      if (conversionUnit === 'celsius') {\n        var resultFC = ((input - 32) * 5 / 9)\n        setResult(resultFC)\n      } else if (conversionUnit === 'kelvin') {\n        var resultFK = ((input - 32) * 5 / 9) + 5\n        setResult(resultFK)\n      }\n    } else if (unit === 'celsius') {\n      if (conversionUnit === 'farenheit') {\n        var resultCF = ((input * 9 / 5) + 32)\n        setResult(resultCF)\n      } else if (conversionUnit === 'kelvin') {\n        var resultCK = input + 273.15\n        setResult(resultCK)\n      }\n    }\n  }\n\n  return (\n    <div className='container text-center'>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://bootswatch.com/4/yeti/bootstrap.min.css\" />\n      </Head>\n\n      <div className=\"card\" style={{ width: '18rem' }}>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Temperature Converter</h5>\n          <form onSubmit={handleSubmit}>\n            Convert: <input value={input} onChange={handleInputChange} type=\"text\" placeholder='Enter Temperature' />\n            <select value={unit} onChange={handleUnitChange}>\n              <option value=\"\">--Select Unit of Measure--</option>\n              <option value=\"farenheit\">Farenheit</option>\n              <option value=\"celsius\">Celsius</option>\n              <option value=\"kelvin\">Kelvin</option>\n            </select>\n            <br />\n            <p>To: </p>\n            <select value={conversionUnit} onChange={handleConversionUnitChange}>\n              <option value=\"\">--Select a Unit of Measure--</option>\n              <option value=\"farenheit\">Farenheit</option>\n              <option value=\"celsius\">Celsius</option>\n              <option value=\"kelvin\">Kelvin</option>\n            </select>\n            <br />\n            <button type='submit'>Convert Temperature</button>\n          </form>\n          {\n            !isNaN(result) ? result.toFixed(0) : ''\n          }\n        </div>\n      </div>\n\n\n\n    </div>\n  )\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}