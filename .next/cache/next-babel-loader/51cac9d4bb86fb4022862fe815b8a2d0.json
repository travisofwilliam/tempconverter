{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/traviswilliams/Desktop/tempconverter/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Head from 'next/head';\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState(undefined),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var _useState2 = useState(''),\n      unit = _useState2[0],\n      setUnit = _useState2[1];\n\n  var _useState3 = useState(''),\n      conversionUnit = _useState3[0],\n      setConversionUnit = _useState3[1];\n\n  var _useState4 = useState(undefined),\n      result = _useState4[0],\n      setResult = _useState4[1];\n\n  var _useState5 = useState(''),\n      errorMessage = _useState5[0],\n      setErrorMessage = _useState5[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    setInput(e.target.value);\n  };\n\n  var handleUnitChange = function handleUnitChange(e) {\n    setUnit(e.target.value);\n  };\n\n  var handleConversionUnitChange = function handleConversionUnitChange(e) {\n    setConversionUnit(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (isNaN(input) || input === '') {\n      setErrorMessage('Please enter a tempterature to convert. Temperature must only contain integers.');\n    } else if (unit === '') {\n      setErrorMessage('Please select a valid unit of measurement');\n    } else if (conversionUnit === '') {\n      setErrorMessage('Please select a valid conversion unit');\n    } else {\n      if (unit === 'kelvin') {\n        if (conversionUnit === 'farenheit') {\n          var resultKF = (input - 273) * (9 / 5) + 35;\n          setResult(resultKF.toFixed(0));\n        } else if (conversionUnit === 'celsius') {\n          var resultKC = input - 273.15;\n          setResult(resultKC.toFixed(0));\n        } else if (conversionUnit === 'kelvin') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!');\n        }\n      } else if (unit === 'farenheit') {\n        if (conversionUnit === 'celsius') {\n          var resultFC = (input - 32) * 5 / 9;\n          setResult(resultFC.toFixed(0));\n        } else if (conversionUnit === 'kelvin') {\n          var resultFK = (input - 32) * 5 / 9 + 5;\n          setResult(resultFK.toFixed(0));\n        } else if (conversionUnit === 'farenheit') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!');\n        }\n      } else if (unit === 'celsius') {\n        if (conversionUnit === 'farenheit') {\n          var resultCF = input * 9 / 5 + 32;\n          setResult(resultCF.toFixed(0));\n        } else if (conversionUnit === 'kelvin') {\n          var resultCK = input + 273.15;\n          setResult(resultCK.toFixed(2));\n        } else if (conversionUnit === 'celsius') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!');\n        }\n      }\n    }\n\n    setInput('');\n  };\n\n  return __jsx(\"div\", {\n    className: \"container text-center mx-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://bootswatch.com/4/yeti/bootstrap.min.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"jumbotron\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-5\",\n    style: {\n      objectFit: 'scale-down'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Temperature Converter\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Convert:\"), __jsx(\"input\", {\n    className: \"mb-3\",\n    value: input,\n    onChange: handleInputChange,\n    type: \"text\",\n    placeholder: \"Enter Temperature\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), __jsx(\"select\", {\n    className: \"mb-3 btn btn-info\",\n    value: unit,\n    onChange: handleUnitChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"--Select Unit of Measure--\"), __jsx(\"option\", {\n    value: \"farenheit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Farenheit\"), __jsx(\"option\", {\n    value: \"celsius\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Celsius\"), __jsx(\"option\", {\n    value: \"kelvin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Kelvin\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"To: \"), __jsx(\"select\", {\n    className: \"mb-3 btn btn-info\",\n    value: conversionUnit,\n    onChange: handleConversionUnitChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"--Select a Unit of Measure--\"), __jsx(\"option\", {\n    value: \"farenheit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Farenheit\"), __jsx(\"option\", {\n    value: \"celsius\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Celsius\"), __jsx(\"option\", {\n    value: \"kelvin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Kelvin\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    className: \"btn btn-primary mb-3\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Convert Temperature\")), !isNaN(result) ? __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 28\n    }\n  }, result + 'Â°') : errorMessage), __jsx(\"button\", {\n    onClick: function onClick() {\n      var resultCK = (input + 273.15).toFixed(0);\n      console.log(conversionUnit);\n      console.log(resultCK);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"log conversion unit\"));\n};\n\n_s(Index, \"It1G1I1eSzcVORdGoRh934ihZJM=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/traviswilliams/Desktop/tempconverter/pages/index.js"],"names":["useState","Head","Index","undefined","input","setInput","unit","setUnit","conversionUnit","setConversionUnit","result","setResult","errorMessage","setErrorMessage","handleInputChange","e","target","value","handleUnitChange","handleConversionUnitChange","handleSubmit","preventDefault","isNaN","resultKF","toFixed","resultKC","resultFC","resultFK","resultCF","resultCK","objectFit","console","log"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Head from 'next/head'\n\nconst Index = () => {\n\n  const [input, setInput] = useState(undefined)\n  const [unit, setUnit] = useState('')\n  const [conversionUnit, setConversionUnit] = useState('')\n  const [result, setResult] = useState(undefined)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value)\n  }\n\n  const handleUnitChange = (e) => {\n    setUnit(e.target.value)\n  }\n\n  const handleConversionUnitChange = (e) => {\n    setConversionUnit(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (isNaN(input) || input === '') {\n      setErrorMessage('Please enter a tempterature to convert. Temperature must only contain integers.')\n    } else if (unit === '') {\n      setErrorMessage('Please select a valid unit of measurement')\n    } else if (conversionUnit === '') {\n      setErrorMessage('Please select a valid conversion unit')\n    } else {\n      if (unit === 'kelvin') {\n        if (conversionUnit === 'farenheit') {\n          var resultKF = ((input - 273) * (9 / 5) + 35)\n          setResult(resultKF.toFixed(0))\n        } else if (conversionUnit === 'celsius') {\n          var resultKC = input - 273.15\n          setResult(resultKC.toFixed(0))\n        } else if (conversionUnit === 'kelvin') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!')\n        }\n      } else if (unit === 'farenheit') {\n        if (conversionUnit === 'celsius') {\n          var resultFC = ((input - 32) * 5 / 9)\n          setResult(resultFC.toFixed(0))\n        } else if (conversionUnit === 'kelvin') {\n          var resultFK = ((input - 32) * 5 / 9) + 5\n          setResult(resultFK.toFixed(0))\n        } else if (conversionUnit === 'farenheit') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!')\n        }\n      } else if (unit === 'celsius') {\n        if (conversionUnit === 'farenheit') {\n          var resultCF = ((input * 9 / 5) + 32)\n          setResult(resultCF.toFixed(0))\n        } else if (conversionUnit === 'kelvin') {\n          var resultCK = input + 273.15\n          setResult(resultCK.toFixed(2))\n        } else if (conversionUnit === 'celsius') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!')\n        }\n      }\n    }\n    setInput('')\n  }\n\n  return (\n    <div className='container text-center mx-auto'>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://bootswatch.com/4/yeti/bootstrap.min.css\" />\n      </Head>\n      <div className=\"jumbotron\">\n        <form onSubmit={handleSubmit}>\n          <h1 className=\"display-5\" style={{ objectFit: 'scale-down' }}>Temperature Converter</h1>\n          <p>Convert:</p>\n          <input\n            className='mb-3'\n            value={input}\n            onChange={handleInputChange}\n            type=\"text\"\n            placeholder='Enter Temperature'\n          />\n          <br />\n          <select className='mb-3 btn btn-info' value={unit} onChange={handleUnitChange}>\n            <option value=\"\">--Select Unit of Measure--</option>\n            <option value=\"farenheit\">Farenheit</option>\n            <option value=\"celsius\">Celsius</option>\n            <option value=\"kelvin\">Kelvin</option>\n          </select>\n          <br />\n          <p>To: </p>\n          <select className='mb-3 btn btn-info' value={conversionUnit} onChange={handleConversionUnitChange}>\n            <option value=\"\">--Select a Unit of Measure--</option>\n            <option value=\"farenheit\">Farenheit</option>\n            <option value=\"celsius\">Celsius</option>\n            <option value=\"kelvin\">Kelvin</option>\n          </select>\n          <br />\n          <button className='btn btn-primary mb-3' type='submit'>Convert Temperature</button>\n        </form>\n        {\n          !isNaN(result) ? <h3>{result + 'Â°'}</h3> : errorMessage\n        }\n      </div>\n      <button onClick={() => {\n        var resultCK = (input + 273.15).toFixed(0)\n        console.log(conversionUnit)\n        console.log(resultCK)\n      }}>log conversion unit</button>\n\n    </div>\n  )\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}