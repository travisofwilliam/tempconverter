{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/traviswilliams/Desktop/tempconverter/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Head from 'next/head';\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState(''),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var _useState2 = useState(''),\n      unit = _useState2[0],\n      setUnit = _useState2[1];\n\n  var _useState3 = useState(''),\n      conversionUnit = _useState3[0],\n      setConversionUnit = _useState3[1];\n\n  var _useState4 = useState(undefined),\n      result = _useState4[0],\n      setResult = _useState4[1];\n\n  var _useState5 = useState(''),\n      errorMessage = _useState5[0],\n      setErrorMessage = _useState5[1];\n\n  var _useState6 = useState('btn-info'),\n      unitBtn = _useState6[0],\n      setUnitBtn = _useState6[1];\n\n  var _useState7 = useState('btn-info'),\n      conversionBtn = _useState7[0],\n      setConversionBtn = _useState7[1];\n\n  var _useState8 = useState(false),\n      clicked = _useState8[0],\n      setClicked = _useState8[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    setInput(e.target.value);\n  };\n\n  var handleUnitChange = function handleUnitChange(e) {\n    setUnit(e.target.value);\n    setUnitBtn('btn-success');\n  };\n\n  var handleConversionUnitChange = function handleConversionUnitChange(e) {\n    setConversionUnit(e.target.value);\n    setConversionBtn('btn-success');\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (isNaN(input) || input === '') {\n      setErrorMessage('Please enter a tempterature to convert. Temperature must only contain integers.');\n    } else if (unit === '') {\n      setErrorMessage('Please select a valid unit of measurement');\n    } else if (conversionUnit === '') {\n      setErrorMessage('Please select a valid conversion unit');\n    } else {\n      if (unit === 'kelvin') {\n        if (conversionUnit === 'farenheit') {\n          var resultKF = (parseInt(input) - 273) * (9 / 5) + 35;\n          setResult(resultKF.toFixed(0));\n        } else if (conversionUnit === 'celsius') {\n          var resultKC = parseInt(input) - 273.15;\n          setResult(resultKC.toFixed(0));\n        } else if (conversionUnit === 'kelvin') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!');\n        }\n      } else if (unit === 'farenheit') {\n        if (conversionUnit === 'celsius') {\n          var resultFC = (parseInt(input) - 32) * 5 / 9;\n          setResult(resultFC.toFixed(0));\n        } else if (conversionUnit === 'kelvin') {\n          var resultFK = (parseInt(input) - 32) * 5 / 9 + 5;\n          setResult(resultFK.toFixed(2));\n        } else if (conversionUnit === 'farenheit') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!');\n        }\n      } else if (unit === 'celsius') {\n        if (conversionUnit === 'farenheit') {\n          var resultCF = parseInt(input) * 9 / 5 + 32;\n          setResult(resultCF.toFixed(0));\n        } else if (conversionUnit === 'kelvin') {\n          var resultCK = parseInt(input) + 273.15;\n          setResult(resultCK.toFixed(2));\n        } else if (conversionUnit === 'celsius') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!');\n        }\n      }\n    }\n\n    setInput('');\n    setClicked(true);\n  };\n\n  return __jsx(\"div\", {\n    className: \"container text-center mx-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://bootswatch.com/4/pulse/bootstrap.min.css\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"jumbotron\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-5\",\n    style: {\n      objectFit: 'scale-down'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Temperature Converter\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Convert:\"), __jsx(\"input\", {\n    className: \"mb-3\",\n    value: input,\n    onChange: handleInputChange,\n    type: \"text\",\n    placeholder: \"Enter Temperature\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), __jsx(\"select\", {\n    className: \"mb-3 dropdown p-2 \".concat(unitBtn),\n    style: {\n      color: 'black'\n    },\n    value: unit,\n    onChange: handleUnitChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"--Select Unit of Measure--\"), __jsx(\"option\", {\n    value: \"farenheit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Farenheit\"), __jsx(\"option\", {\n    value: \"celsius\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Celsius\"), __jsx(\"option\", {\n    value: \"kelvin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Kelvin\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"To: \"), __jsx(\"select\", {\n    className: \"mb-3 dropdown p-2 \".concat(conversionBtn),\n    style: {\n      color: 'black'\n    },\n    value: conversionUnit,\n    onChange: handleConversionUnitChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"--Select a Unit of Measure--\"), __jsx(\"option\", {\n    value: \"farenheit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Farenheit\"), __jsx(\"option\", {\n    value: \"celsius\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Celsius\"), __jsx(\"option\", {\n    value: \"kelvin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Kelvin\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    className: \"btn btn-primary mb-3\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Convert Temperature\")), !isNaN(result) && clicked ? __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, conversionUnit === 'kelvin' ? result : result + 'Â°') : errorMessage));\n};\n\n_s(Index, \"P+A5JcNb1XQulqAtgvvFkravCec=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/traviswilliams/Desktop/tempconverter/pages/index.js"],"names":["useState","Head","Index","input","setInput","unit","setUnit","conversionUnit","setConversionUnit","undefined","result","setResult","errorMessage","setErrorMessage","unitBtn","setUnitBtn","conversionBtn","setConversionBtn","clicked","setClicked","handleInputChange","e","target","value","handleUnitChange","handleConversionUnitChange","handleSubmit","preventDefault","isNaN","resultKF","parseInt","toFixed","resultKC","resultFC","resultFK","resultCF","resultCK","objectFit","color"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport Head from 'next/head'\n\nconst Index = () => {\n\n  const [input, setInput] = useState('')\n  const [unit, setUnit] = useState('')\n  const [conversionUnit, setConversionUnit] = useState('')\n  const [result, setResult] = useState(undefined)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [unitBtn, setUnitBtn] = useState('btn-info')\n  const [conversionBtn, setConversionBtn] = useState('btn-info')\n  const [clicked, setClicked] = useState(false)\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value)\n  }\n\n  const handleUnitChange = (e) => {\n    setUnit(e.target.value)\n    setUnitBtn('btn-success')\n  }\n\n  const handleConversionUnitChange = (e) => {\n    setConversionUnit(e.target.value)\n    setConversionBtn('btn-success')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (isNaN(input) || input === '') {\n      setErrorMessage('Please enter a tempterature to convert. Temperature must only contain integers.')\n    } else if (unit === '') {\n      setErrorMessage('Please select a valid unit of measurement')\n    } else if (conversionUnit === '') {\n      setErrorMessage('Please select a valid conversion unit')\n    } else {\n      if (unit === 'kelvin') {\n        if (conversionUnit === 'farenheit') {\n          var resultKF = ((parseInt(input) - 273) * (9 / 5) + 35)\n          setResult(resultKF.toFixed(0))\n        } else if (conversionUnit === 'celsius') {\n          var resultKC = parseInt(input) - 273.15\n          setResult(resultKC.toFixed(0))\n        } else if (conversionUnit === 'kelvin') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!')\n        }\n      } else if (unit === 'farenheit') {\n        if (conversionUnit === 'celsius') {\n          var resultFC = ((parseInt(input) - 32) * 5 / 9)\n          setResult(resultFC.toFixed(0))\n        } else if (conversionUnit === 'kelvin') {\n          var resultFK = ((parseInt(input) - 32) * 5 / 9) + 5\n          setResult(resultFK.toFixed(2))\n        } else if (conversionUnit === 'farenheit') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!')\n        }\n      } else if (unit === 'celsius') {\n        if (conversionUnit === 'farenheit') {\n          var resultCF = ((parseInt(input) * 9 / 5) + 32)\n          setResult(resultCF.toFixed(0))\n        } else if (conversionUnit === 'kelvin') {\n          var resultCK = (parseInt(input) + 273.15)\n          setResult(resultCK.toFixed(2))\n        } else if (conversionUnit === 'celsius') {\n          setErrorMessage('Warning: Original temperature unit and conversion unit can not be the same!')\n        }\n      }\n    }\n    setInput('')\n    setClicked(true)\n  }\n\n  return (\n    <div className='container text-center mx-auto'>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://bootswatch.com/4/pulse/bootstrap.min.css\" />\n      </Head>\n      <div className=\"jumbotron\">\n        <form onSubmit={handleSubmit}>\n\n          <h1 className=\"display-5\" style={{ objectFit: 'scale-down' }}>Temperature Converter</h1>\n          <p>Convert:</p>\n          <input\n            className='mb-3'\n            value={input}\n            onChange={handleInputChange}\n            type=\"text\"\n            placeholder='Enter Temperature'\n          />\n          <br />\n          <select\n            className={`mb-3 dropdown p-2 ${unitBtn}`}\n            style={{ color: 'black' }}\n            value={unit}\n            onChange={handleUnitChange}\n          >\n            <option value=\"\">--Select Unit of Measure--</option>\n            <option value=\"farenheit\">Farenheit</option>\n            <option value=\"celsius\">Celsius</option>\n            <option value=\"kelvin\">Kelvin</option>\n          </select>\n          <br />\n          <p>To: </p>\n          <select\n            className={`mb-3 dropdown p-2 ${conversionBtn}`}\n            style={{ color: 'black' }}\n            value={conversionUnit}\n            onChange={handleConversionUnitChange}\n          >\n            <option value=\"\">--Select a Unit of Measure--</option>\n            <option value=\"farenheit\">Farenheit</option>\n            <option value=\"celsius\">Celsius</option>\n            <option value=\"kelvin\">Kelvin</option>\n          </select>\n          <br />\n          <button\n            className='btn btn-primary mb-3'\n            type='submit'\n          >\n            Convert Temperature\n          </button>\n\n        </form>\n        {\n          !isNaN(result) && clicked ?\n            <h3>{\n              conversionUnit === 'kelvin' ? result\n                : result + 'Â°'\n            }</h3>\n            : errorMessage\n        }\n      </div>\n\n    </div>\n  )\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}